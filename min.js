var udomdiff=(e=>{function x(e,r,i,f){r===i.isConnected?e.moveBefore(i,f):e.insertBefore(i,f)}return e.default=function(e,r,i,f,n){for(var l=e.isConnected,o=i.length,t=r.length,s=o,a=0,v=0,d=null;a<t||v<s;)if(t===a)for(var u=s<o?v?f(i[v-1],-0).nextSibling:f(i[s],0):n;v<s;)x(e,l,f(i[v++],1),u);else if(s===v)for(;a<t;)d&&d.has(r[a])||e.removeChild(f(r[a],-1)),a++;else if(r[a]===i[v])a++,v++;else if(r[t-1]===i[s-1])t--,s--;else if(r[a]===i[s-1]&&i[v]===r[t-1]){var g=f(r[--t],-1).nextSibling;x(e,l,f(i[v++],1),f(r[a++],-1).nextSibling),x(e,l,f(i[--s],1),g),r[t]=i[s]}else{if(!d)for(var d=new Map,h=v;h<s;)d.set(i[h],h++);if(d.has(r[a])){var c=d.get(r[a]);if(v<c&&c<s){for(var b=a,m=1;++b<t&&b<s&&d.get(r[b])===c+m;)m++;if(c-v<m)for(var C=f(r[a],0);v<c;)x(e,l,f(i[v++],1),C);else x(e,l,f(i[v++],1),f(r[a++],0))}else a++}else e.removeChild(f(r[a++],-1))}return i},Object.defineProperty(e,"__esModule",{value:!0}),e})({}).default;