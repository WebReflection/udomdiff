var udomdiff=function(e){"use strict";const t=(e,t,n,i)=>{t===n.isConnected?e.moveBefore(n,i):e.insertBefore(n,i)};return e.default=(e,n,i,l,o)=>{const{isConnected:s}=e,f=i.length;let r=n.length,c=f,d=0,u=0,g=null;for(;d<r||u<c;)if(r===d){const n=c<f?u?l(i[u-1],-0).nextSibling:l(i[c],0):o;for(;u<c;)t(e,s,l(i[u++],1),n)}else if(c===u)for(;d<r;)g&&g.has(n[d])||e.removeChild(l(n[d],-1)),d++;else if(n[d]===i[u])d++,u++;else if(n[r-1]===i[c-1])r--,c--;else if(n[d]===i[c-1]&&i[u]===n[r-1]){const o=l(n[--r],-1).nextSibling;t(e,s,l(i[u++],1),l(n[d++],-1).nextSibling),t(e,s,l(i[--c],1),o),n[r]=i[c]}else{if(!g){g=new Map;let e=u;for(;e<c;)g.set(i[e],e++)}if(g.has(n[d])){const o=g.get(n[d]);if(u<o&&o<c){let f=d,a=1;for(;++f<r&&f<c&&g.get(n[f])===o+a;)a++;if(a>o-u){const f=l(n[d],0);for(;u<o;)t(e,s,l(i[u++],1),f)}else t(e,s,l(i[u++],1),l(n[d++],0))}else d++}else e.removeChild(l(n[d++],-1))}return i},Object.defineProperty(e,"__esModule",{value:!0}),e}({}).default;
